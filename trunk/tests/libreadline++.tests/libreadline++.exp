set timeout 3
#
# expectations that clean up in case of error. Note that `$test' is
# a purely local variable.
#
# The first of these is used to match any bad responses, and resynchronise
# things by finding a prompt. The second is a timeout error, and shouldn't
# ever be triggered.                                                  
#                                                                         
expect_after {                                                            
    -re "\[^\n\r\]*$prompt$" {
        fail "$test (bad match)"
        if { $verbose > 0 } {                                    
            regexp ".*\r\n(\[^\r\n\]+)(\[\r\n\])+$prompt$" \    
                $expect_out(buffer) "" output                  
            send_user "\tUnmatched output: \"$output\"\n"   
        }                                                          
    }
    timeout {                                                
        fail "$test (timeout)"
    }
}

set test test1
send "foo\n"
expect {
    -re "Read input 'foo'\..*$prompt$" { pass "$test" }
}

set test test2
send "print size\n"
expect {
    -re "history size = 1.*Read input 'print size'\..*$prompt$" { pass "$test" }
}
